// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serviceData.proto

package TaskBingo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterUserResponse struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{0}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *RegisterUserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type LoginUserResponse struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginUserResponse) Reset()         { *m = LoginUserResponse{} }
func (m *LoginUserResponse) String() string { return proto.CompactTextString(m) }
func (*LoginUserResponse) ProtoMessage()    {}
func (*LoginUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{1}
}

func (m *LoginUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserResponse.Unmarshal(m, b)
}
func (m *LoginUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserResponse.Marshal(b, m, deterministic)
}
func (m *LoginUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserResponse.Merge(m, src)
}
func (m *LoginUserResponse) XXX_Size() int {
	return xxx_messageInfo_LoginUserResponse.Size(m)
}
func (m *LoginUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserResponse proto.InternalMessageInfo

func (m *LoginUserResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LoginUserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GameRequest struct {
	GameID               string   `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	User1Id              string   `protobuf:"bytes,2,opt,name=user1id,proto3" json:"user1id,omitempty"`
	User2Id              string   `protobuf:"bytes,3,opt,name=user2id,proto3" json:"user2id,omitempty"`
	Pack                 string   `protobuf:"bytes,4,opt,name=pack,proto3" json:"pack,omitempty"`
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	User1Bingo           int32    `protobuf:"varint,6,opt,name=user1bingo,proto3" json:"user1bingo,omitempty"`
	User2Bingo           int32    `protobuf:"varint,7,opt,name=user2bingo,proto3" json:"user2bingo,omitempty"`
	Winner               string   `protobuf:"bytes,8,opt,name=winner,proto3" json:"winner,omitempty"`
	Numbers              []int32  `protobuf:"varint,9,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	User1Numbers         []int32  `protobuf:"varint,10,rep,packed,name=user1numbers,proto3" json:"user1numbers,omitempty"`
	User2Numbers         []int32  `protobuf:"varint,11,rep,packed,name=user2numbers,proto3" json:"user2numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRequest) Reset()         { *m = GameRequest{} }
func (m *GameRequest) String() string { return proto.CompactTextString(m) }
func (*GameRequest) ProtoMessage()    {}
func (*GameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{2}
}

func (m *GameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRequest.Unmarshal(m, b)
}
func (m *GameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRequest.Marshal(b, m, deterministic)
}
func (m *GameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRequest.Merge(m, src)
}
func (m *GameRequest) XXX_Size() int {
	return xxx_messageInfo_GameRequest.Size(m)
}
func (m *GameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameRequest proto.InternalMessageInfo

func (m *GameRequest) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *GameRequest) GetUser1Id() string {
	if m != nil {
		return m.User1Id
	}
	return ""
}

func (m *GameRequest) GetUser2Id() string {
	if m != nil {
		return m.User2Id
	}
	return ""
}

func (m *GameRequest) GetPack() string {
	if m != nil {
		return m.Pack
	}
	return ""
}

func (m *GameRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GameRequest) GetUser1Bingo() int32 {
	if m != nil {
		return m.User1Bingo
	}
	return 0
}

func (m *GameRequest) GetUser2Bingo() int32 {
	if m != nil {
		return m.User2Bingo
	}
	return 0
}

func (m *GameRequest) GetWinner() string {
	if m != nil {
		return m.Winner
	}
	return ""
}

func (m *GameRequest) GetNumbers() []int32 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

func (m *GameRequest) GetUser1Numbers() []int32 {
	if m != nil {
		return m.User1Numbers
	}
	return nil
}

func (m *GameRequest) GetUser2Numbers() []int32 {
	if m != nil {
		return m.User2Numbers
	}
	return nil
}

type FriendRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FriendID             string   `protobuf:"bytes,2,opt,name=friendID,proto3" json:"friendID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendRequest) Reset()         { *m = FriendRequest{} }
func (m *FriendRequest) String() string { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()    {}
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{3}
}

func (m *FriendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendRequest.Unmarshal(m, b)
}
func (m *FriendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendRequest.Marshal(b, m, deterministic)
}
func (m *FriendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendRequest.Merge(m, src)
}
func (m *FriendRequest) XXX_Size() int {
	return xxx_messageInfo_FriendRequest.Size(m)
}
func (m *FriendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FriendRequest proto.InternalMessageInfo

func (m *FriendRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *FriendRequest) GetFriendID() string {
	if m != nil {
		return m.FriendID
	}
	return ""
}

type GetUserDataRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserDataRequest) Reset()         { *m = GetUserDataRequest{} }
func (m *GetUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserDataRequest) ProtoMessage()    {}
func (*GetUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{4}
}

func (m *GetUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserDataRequest.Unmarshal(m, b)
}
func (m *GetUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserDataRequest.Marshal(b, m, deterministic)
}
func (m *GetUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserDataRequest.Merge(m, src)
}
func (m *GetUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserDataRequest.Size(m)
}
func (m *GetUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserDataRequest proto.InternalMessageInfo

func (m *GetUserDataRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetUserDataResponse struct {
	UserID               string              `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username             string              `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	City                 string              `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Wins                 int32               `protobuf:"varint,4,opt,name=wins,proto3" json:"wins,omitempty"`
	Loses                int32               `protobuf:"varint,5,opt,name=loses,proto3" json:"loses,omitempty"`
	Bingo                int32               `protobuf:"varint,6,opt,name=bingo,proto3" json:"bingo,omitempty"`
	Friends              []*FriendInfo       `protobuf:"bytes,7,rep,name=friends,proto3" json:"friends,omitempty"`
	LikedPacks           []*TaskPackResponse `protobuf:"bytes,8,rep,name=likedPacks,proto3" json:"likedPacks,omitempty"`
	RatedPacks           []string            `protobuf:"bytes,9,rep,name=ratedPacks,proto3" json:"ratedPacks,omitempty"`
	Games                []*GameShort        `protobuf:"bytes,10,rep,name=games,proto3" json:"games,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetUserDataResponse) Reset()         { *m = GetUserDataResponse{} }
func (m *GetUserDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserDataResponse) ProtoMessage()    {}
func (*GetUserDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{5}
}

func (m *GetUserDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserDataResponse.Unmarshal(m, b)
}
func (m *GetUserDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserDataResponse.Marshal(b, m, deterministic)
}
func (m *GetUserDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserDataResponse.Merge(m, src)
}
func (m *GetUserDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserDataResponse.Size(m)
}
func (m *GetUserDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserDataResponse proto.InternalMessageInfo

func (m *GetUserDataResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserDataResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetUserDataResponse) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *GetUserDataResponse) GetWins() int32 {
	if m != nil {
		return m.Wins
	}
	return 0
}

func (m *GetUserDataResponse) GetLoses() int32 {
	if m != nil {
		return m.Loses
	}
	return 0
}

func (m *GetUserDataResponse) GetBingo() int32 {
	if m != nil {
		return m.Bingo
	}
	return 0
}

func (m *GetUserDataResponse) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *GetUserDataResponse) GetLikedPacks() []*TaskPackResponse {
	if m != nil {
		return m.LikedPacks
	}
	return nil
}

func (m *GetUserDataResponse) GetRatedPacks() []string {
	if m != nil {
		return m.RatedPacks
	}
	return nil
}

func (m *GetUserDataResponse) GetGames() []*GameShort {
	if m != nil {
		return m.Games
	}
	return nil
}

type GameShort struct {
	GameID               string   `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	User1Id              string   `protobuf:"bytes,2,opt,name=user1id,proto3" json:"user1id,omitempty"`
	User2Id              string   `protobuf:"bytes,3,opt,name=user2id,proto3" json:"user2id,omitempty"`
	Pack                 string   `protobuf:"bytes,4,opt,name=pack,proto3" json:"pack,omitempty"`
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	User1Bingo           int32    `protobuf:"varint,6,opt,name=user1bingo,proto3" json:"user1bingo,omitempty"`
	User2Bingo           int32    `protobuf:"varint,7,opt,name=user2bingo,proto3" json:"user2bingo,omitempty"`
	Winner               string   `protobuf:"bytes,8,opt,name=winner,proto3" json:"winner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameShort) Reset()         { *m = GameShort{} }
func (m *GameShort) String() string { return proto.CompactTextString(m) }
func (*GameShort) ProtoMessage()    {}
func (*GameShort) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{6}
}

func (m *GameShort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameShort.Unmarshal(m, b)
}
func (m *GameShort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameShort.Marshal(b, m, deterministic)
}
func (m *GameShort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameShort.Merge(m, src)
}
func (m *GameShort) XXX_Size() int {
	return xxx_messageInfo_GameShort.Size(m)
}
func (m *GameShort) XXX_DiscardUnknown() {
	xxx_messageInfo_GameShort.DiscardUnknown(m)
}

var xxx_messageInfo_GameShort proto.InternalMessageInfo

func (m *GameShort) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *GameShort) GetUser1Id() string {
	if m != nil {
		return m.User1Id
	}
	return ""
}

func (m *GameShort) GetUser2Id() string {
	if m != nil {
		return m.User2Id
	}
	return ""
}

func (m *GameShort) GetPack() string {
	if m != nil {
		return m.Pack
	}
	return ""
}

func (m *GameShort) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GameShort) GetUser1Bingo() int32 {
	if m != nil {
		return m.User1Bingo
	}
	return 0
}

func (m *GameShort) GetUser2Bingo() int32 {
	if m != nil {
		return m.User2Bingo
	}
	return 0
}

func (m *GameShort) GetWinner() string {
	if m != nil {
		return m.Winner
	}
	return ""
}

type FriendInfo struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Wins                 int32    `protobuf:"varint,4,opt,name=wins,proto3" json:"wins,omitempty"`
	Loses                int32    `protobuf:"varint,5,opt,name=loses,proto3" json:"loses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendInfo) Reset()         { *m = FriendInfo{} }
func (m *FriendInfo) String() string { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()    {}
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{7}
}

func (m *FriendInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendInfo.Unmarshal(m, b)
}
func (m *FriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendInfo.Marshal(b, m, deterministic)
}
func (m *FriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendInfo.Merge(m, src)
}
func (m *FriendInfo) XXX_Size() int {
	return xxx_messageInfo_FriendInfo.Size(m)
}
func (m *FriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendInfo proto.InternalMessageInfo

func (m *FriendInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *FriendInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *FriendInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FriendInfo) GetWins() int32 {
	if m != nil {
		return m.Wins
	}
	return 0
}

func (m *FriendInfo) GetLoses() int32 {
	if m != nil {
		return m.Loses
	}
	return 0
}

type RegisterUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{8}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginUserRequest) Reset()         { *m = LoginUserRequest{} }
func (m *LoginUserRequest) String() string { return proto.CompactTextString(m) }
func (*LoginUserRequest) ProtoMessage()    {}
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{9}
}

func (m *LoginUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserRequest.Unmarshal(m, b)
}
func (m *LoginUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserRequest.Marshal(b, m, deterministic)
}
func (m *LoginUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserRequest.Merge(m, src)
}
func (m *LoginUserRequest) XXX_Size() int {
	return xxx_messageInfo_LoginUserRequest.Size(m)
}
func (m *LoginUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserRequest proto.InternalMessageInfo

func (m *LoginUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LikeOrRatePackRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Pack                 string   `protobuf:"bytes,2,opt,name=pack,proto3" json:"pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeOrRatePackRequest) Reset()         { *m = LikeOrRatePackRequest{} }
func (m *LikeOrRatePackRequest) String() string { return proto.CompactTextString(m) }
func (*LikeOrRatePackRequest) ProtoMessage()    {}
func (*LikeOrRatePackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{10}
}

func (m *LikeOrRatePackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LikeOrRatePackRequest.Unmarshal(m, b)
}
func (m *LikeOrRatePackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LikeOrRatePackRequest.Marshal(b, m, deterministic)
}
func (m *LikeOrRatePackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeOrRatePackRequest.Merge(m, src)
}
func (m *LikeOrRatePackRequest) XXX_Size() int {
	return xxx_messageInfo_LikeOrRatePackRequest.Size(m)
}
func (m *LikeOrRatePackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeOrRatePackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LikeOrRatePackRequest proto.InternalMessageInfo

func (m *LikeOrRatePackRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LikeOrRatePackRequest) GetPack() string {
	if m != nil {
		return m.Pack
	}
	return ""
}

type PersonInfo struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Bingo                int32    `protobuf:"varint,4,opt,name=bingo,proto3" json:"bingo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonInfo) Reset()         { *m = PersonInfo{} }
func (m *PersonInfo) String() string { return proto.CompactTextString(m) }
func (*PersonInfo) ProtoMessage()    {}
func (*PersonInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{11}
}

func (m *PersonInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonInfo.Unmarshal(m, b)
}
func (m *PersonInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonInfo.Marshal(b, m, deterministic)
}
func (m *PersonInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonInfo.Merge(m, src)
}
func (m *PersonInfo) XXX_Size() int {
	return xxx_messageInfo_PersonInfo.Size(m)
}
func (m *PersonInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PersonInfo proto.InternalMessageInfo

func (m *PersonInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PersonInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PersonInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PersonInfo) GetBingo() int32 {
	if m != nil {
		return m.Bingo
	}
	return 0
}

type People struct {
	Person               []*PersonInfo `protobuf:"bytes,1,rep,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *People) Reset()         { *m = People{} }
func (m *People) String() string { return proto.CompactTextString(m) }
func (*People) ProtoMessage()    {}
func (*People) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{12}
}

func (m *People) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_People.Unmarshal(m, b)
}
func (m *People) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_People.Marshal(b, m, deterministic)
}
func (m *People) XXX_Merge(src proto.Message) {
	xxx_messageInfo_People.Merge(m, src)
}
func (m *People) XXX_Size() int {
	return xxx_messageInfo_People.Size(m)
}
func (m *People) XXX_DiscardUnknown() {
	xxx_messageInfo_People.DiscardUnknown(m)
}

var xxx_messageInfo_People proto.InternalMessageInfo

func (m *People) GetPerson() []*PersonInfo {
	if m != nil {
		return m.Person
	}
	return nil
}

type StatusGameRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GameID               string   `protobuf:"bytes,2,opt,name=gameID,proto3" json:"gameID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusGameRequest) Reset()         { *m = StatusGameRequest{} }
func (m *StatusGameRequest) String() string { return proto.CompactTextString(m) }
func (*StatusGameRequest) ProtoMessage()    {}
func (*StatusGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{13}
}

func (m *StatusGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusGameRequest.Unmarshal(m, b)
}
func (m *StatusGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusGameRequest.Marshal(b, m, deterministic)
}
func (m *StatusGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusGameRequest.Merge(m, src)
}
func (m *StatusGameRequest) XXX_Size() int {
	return xxx_messageInfo_StatusGameRequest.Size(m)
}
func (m *StatusGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusGameRequest proto.InternalMessageInfo

func (m *StatusGameRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *StatusGameRequest) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

type GetGameRequest struct {
	GameID               string   `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameRequest) Reset()         { *m = GetGameRequest{} }
func (m *GetGameRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameRequest) ProtoMessage()    {}
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{14}
}

func (m *GetGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRequest.Unmarshal(m, b)
}
func (m *GetGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRequest.Marshal(b, m, deterministic)
}
func (m *GetGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRequest.Merge(m, src)
}
func (m *GetGameRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameRequest.Size(m)
}
func (m *GetGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRequest proto.InternalMessageInfo

func (m *GetGameRequest) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

type TaskPackRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskPackRequest) Reset()         { *m = TaskPackRequest{} }
func (m *TaskPackRequest) String() string { return proto.CompactTextString(m) }
func (*TaskPackRequest) ProtoMessage()    {}
func (*TaskPackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{15}
}

func (m *TaskPackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskPackRequest.Unmarshal(m, b)
}
func (m *TaskPackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskPackRequest.Marshal(b, m, deterministic)
}
func (m *TaskPackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskPackRequest.Merge(m, src)
}
func (m *TaskPackRequest) XXX_Size() int {
	return xxx_messageInfo_TaskPackRequest.Size(m)
}
func (m *TaskPackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskPackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskPackRequest proto.InternalMessageInfo

func (m *TaskPackRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TaskPackResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pack                 *Pack    `protobuf:"bytes,2,opt,name=pack,proto3" json:"pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskPackResponse) Reset()         { *m = TaskPackResponse{} }
func (m *TaskPackResponse) String() string { return proto.CompactTextString(m) }
func (*TaskPackResponse) ProtoMessage()    {}
func (*TaskPackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{16}
}

func (m *TaskPackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskPackResponse.Unmarshal(m, b)
}
func (m *TaskPackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskPackResponse.Marshal(b, m, deterministic)
}
func (m *TaskPackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskPackResponse.Merge(m, src)
}
func (m *TaskPackResponse) XXX_Size() int {
	return xxx_messageInfo_TaskPackResponse.Size(m)
}
func (m *TaskPackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskPackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskPackResponse proto.InternalMessageInfo

func (m *TaskPackResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskPackResponse) GetPack() *Pack {
	if m != nil {
		return m.Pack
	}
	return nil
}

type NewTaskPackRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	PackID               string   `protobuf:"bytes,2,opt,name=packID,proto3" json:"packID,omitempty"`
	Pack                 *Pack    `protobuf:"bytes,3,opt,name=pack,proto3" json:"pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTaskPackRequest) Reset()         { *m = NewTaskPackRequest{} }
func (m *NewTaskPackRequest) String() string { return proto.CompactTextString(m) }
func (*NewTaskPackRequest) ProtoMessage()    {}
func (*NewTaskPackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{17}
}

func (m *NewTaskPackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTaskPackRequest.Unmarshal(m, b)
}
func (m *NewTaskPackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTaskPackRequest.Marshal(b, m, deterministic)
}
func (m *NewTaskPackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTaskPackRequest.Merge(m, src)
}
func (m *NewTaskPackRequest) XXX_Size() int {
	return xxx_messageInfo_NewTaskPackRequest.Size(m)
}
func (m *NewTaskPackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTaskPackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTaskPackRequest proto.InternalMessageInfo

func (m *NewTaskPackRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *NewTaskPackRequest) GetPackID() string {
	if m != nil {
		return m.PackID
	}
	return ""
}

func (m *NewTaskPackRequest) GetPack() *Pack {
	if m != nil {
		return m.Pack
	}
	return nil
}

type Pack struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Tasks                []string `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pack) Reset()         { *m = Pack{} }
func (m *Pack) String() string { return proto.CompactTextString(m) }
func (*Pack) ProtoMessage()    {}
func (*Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{18}
}

func (m *Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pack.Unmarshal(m, b)
}
func (m *Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pack.Marshal(b, m, deterministic)
}
func (m *Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pack.Merge(m, src)
}
func (m *Pack) XXX_Size() int {
	return xxx_messageInfo_Pack.Size(m)
}
func (m *Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_Pack proto.InternalMessageInfo

func (m *Pack) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Pack) GetTasks() []string {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetMultiplePacksResponse struct {
	Packs                []*TaskPackResponse `protobuf:"bytes,1,rep,name=packs,proto3" json:"packs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetMultiplePacksResponse) Reset()         { *m = GetMultiplePacksResponse{} }
func (m *GetMultiplePacksResponse) String() string { return proto.CompactTextString(m) }
func (*GetMultiplePacksResponse) ProtoMessage()    {}
func (*GetMultiplePacksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{19}
}

func (m *GetMultiplePacksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultiplePacksResponse.Unmarshal(m, b)
}
func (m *GetMultiplePacksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultiplePacksResponse.Marshal(b, m, deterministic)
}
func (m *GetMultiplePacksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultiplePacksResponse.Merge(m, src)
}
func (m *GetMultiplePacksResponse) XXX_Size() int {
	return xxx_messageInfo_GetMultiplePacksResponse.Size(m)
}
func (m *GetMultiplePacksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultiplePacksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultiplePacksResponse proto.InternalMessageInfo

func (m *GetMultiplePacksResponse) GetPacks() []*TaskPackResponse {
	if m != nil {
		return m.Packs
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d66bcfdc0501cb, []int{20}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterUserResponse)(nil), "api.RegisterUserResponse")
	proto.RegisterType((*LoginUserResponse)(nil), "api.LoginUserResponse")
	proto.RegisterType((*GameRequest)(nil), "api.GameRequest")
	proto.RegisterType((*FriendRequest)(nil), "api.FriendRequest")
	proto.RegisterType((*GetUserDataRequest)(nil), "api.GetUserDataRequest")
	proto.RegisterType((*GetUserDataResponse)(nil), "api.GetUserDataResponse")
	proto.RegisterType((*GameShort)(nil), "api.GameShort")
	proto.RegisterType((*FriendInfo)(nil), "api.FriendInfo")
	proto.RegisterType((*RegisterUserRequest)(nil), "api.RegisterUserRequest")
	proto.RegisterType((*LoginUserRequest)(nil), "api.LoginUserRequest")
	proto.RegisterType((*LikeOrRatePackRequest)(nil), "api.LikeOrRatePackRequest")
	proto.RegisterType((*PersonInfo)(nil), "api.PersonInfo")
	proto.RegisterType((*People)(nil), "api.People")
	proto.RegisterType((*StatusGameRequest)(nil), "api.StatusGameRequest")
	proto.RegisterType((*GetGameRequest)(nil), "api.GetGameRequest")
	proto.RegisterType((*TaskPackRequest)(nil), "api.TaskPackRequest")
	proto.RegisterType((*TaskPackResponse)(nil), "api.TaskPackResponse")
	proto.RegisterType((*NewTaskPackRequest)(nil), "api.NewTaskPackRequest")
	proto.RegisterType((*Pack)(nil), "api.Pack")
	proto.RegisterType((*GetMultiplePacksResponse)(nil), "api.GetMultiplePacksResponse")
	proto.RegisterType((*Empty)(nil), "api.Empty")
}

func init() { proto.RegisterFile("serviceData.proto", fileDescriptor_81d66bcfdc0501cb) }

var fileDescriptor_81d66bcfdc0501cb = []byte{
	// 991 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0x97, 0xed, 0x38, 0xb6, 0x9f, 0x93, 0x34, 0x99, 0xa4, 0x65, 0xb1, 0x54, 0x64, 0x46, 0x48,
	0x35, 0x14, 0x39, 0x74, 0x21, 0x97, 0x4a, 0x48, 0xa4, 0x36, 0x58, 0xa9, 0x0a, 0x8d, 0x36, 0xf4,
	0xc2, 0x6d, 0xe3, 0x7d, 0x75, 0x06, 0xaf, 0x77, 0x97, 0x9d, 0x71, 0xad, 0x5e, 0xf9, 0x62, 0x9c,
	0xf8, 0x14, 0x7c, 0x17, 0x84, 0x66, 0x66, 0x67, 0x77, 0xbc, 0x5e, 0x52, 0x27, 0xdc, 0xb8, 0xed,
	0xfb, 0x3b, 0x6f, 0xde, 0xef, 0xf7, 0xde, 0xd8, 0x70, 0xc4, 0x31, 0x7d, 0xc7, 0xa6, 0x38, 0xf6,
	0x85, 0x3f, 0x4c, 0xd2, 0x58, 0xc4, 0xa4, 0xe1, 0x27, 0x8c, 0xbe, 0x84, 0x13, 0x0f, 0x67, 0x8c,
	0x0b, 0x4c, 0xdf, 0x70, 0x4c, 0x3d, 0xe4, 0x49, 0x1c, 0x71, 0x24, 0x8f, 0x60, 0x77, 0xc9, 0x31,
	0xbd, 0x18, 0x3b, 0xb5, 0x7e, 0x6d, 0xd0, 0xf1, 0x32, 0x89, 0xf4, 0xa0, 0x2d, 0xbf, 0x22, 0x7f,
	0x81, 0x4e, 0x5d, 0x59, 0x72, 0x99, 0x4e, 0xe0, 0xe8, 0x55, 0x3c, 0x63, 0xd1, 0x7f, 0x4e, 0xf4,
	0x47, 0x1d, 0xba, 0x13, 0x7f, 0x81, 0x1e, 0xfe, 0xb6, 0x44, 0x2e, 0x64, 0x8e, 0x99, 0xbf, 0xc0,
	0x22, 0x87, 0x96, 0x88, 0x03, 0x2d, 0x19, 0xf3, 0x8c, 0x05, 0x59, 0x0a, 0x23, 0x1a, 0x8b, 0xcb,
	0x02, 0xa7, 0x51, 0x58, 0x5c, 0x16, 0x10, 0x02, 0x3b, 0x89, 0x3f, 0x9d, 0x3b, 0x3b, 0x4a, 0xad,
	0xbe, 0x65, 0x7e, 0x2e, 0x7c, 0xb1, 0xe4, 0x4e, 0xb3, 0x5f, 0x1b, 0x34, 0xbd, 0x4c, 0x22, 0x9f,
	0x00, 0xa8, 0x84, 0xd7, 0x2c, 0x9a, 0xc5, 0xce, 0xae, 0xb2, 0x59, 0x1a, 0x63, 0x77, 0xb5, 0xbd,
	0x55, 0xd8, 0xb5, 0x46, 0xe6, 0x5d, 0xb1, 0x28, 0xc2, 0xd4, 0x69, 0xeb, 0xba, 0xb5, 0x24, 0xab,
	0x8b, 0x96, 0x8b, 0x6b, 0x4c, 0xb9, 0xd3, 0xe9, 0x37, 0x06, 0x4d, 0xcf, 0x88, 0x84, 0xc2, 0x9e,
	0xca, 0x6f, 0xcc, 0xa0, 0xcc, 0x6b, 0x3a, 0xe3, 0xe3, 0x1a, 0x9f, 0x6e, 0xe1, 0x63, 0x74, 0x74,
	0x04, 0xfb, 0x3f, 0xa4, 0x0c, 0xa3, 0xc0, 0x6a, 0xe1, 0xbf, 0xc1, 0xf0, 0x56, 0x39, 0x5e, 0x8c,
	0x0d, 0x0c, 0x46, 0xa6, 0x5f, 0x02, 0x99, 0xa0, 0x90, 0x68, 0x4a, 0xd6, 0x7c, 0x20, 0x13, 0xfd,
	0xb3, 0x0e, 0xc7, 0x6b, 0xee, 0xf7, 0x27, 0x80, 0x04, 0x69, 0xca, 0xc4, 0xfb, 0x0c, 0x3b, 0xf5,
	0x2d, 0x75, 0x2b, 0x16, 0x71, 0x05, 0x5c, 0xd3, 0x53, 0xdf, 0xe4, 0x04, 0x9a, 0x61, 0xcc, 0xd1,
	0xe0, 0xa6, 0x05, 0xa9, 0xb5, 0x11, 0xd3, 0x02, 0xf9, 0x1c, 0x5a, 0xfa, 0x66, 0xdc, 0x69, 0xf5,
	0x1b, 0x83, 0xae, 0xfb, 0x60, 0xe8, 0x27, 0x6c, 0xa8, 0xdb, 0x74, 0x11, 0xbd, 0x8d, 0x3d, 0x63,
	0x27, 0x67, 0x00, 0x21, 0x9b, 0x63, 0x70, 0xe9, 0x4f, 0xe7, 0xdc, 0x69, 0x2b, 0xef, 0x87, 0xca,
	0xfb, 0x67, 0x9f, 0xcf, 0xa5, 0xd6, 0xdc, 0xce, 0xb3, 0x1c, 0x25, 0x1d, 0x52, 0x5f, 0x98, 0x30,
	0x89, 0x6c, 0xc7, 0xb3, 0x34, 0xe4, 0x33, 0x68, 0x4a, 0xe2, 0x6a, 0x54, 0xbb, 0xee, 0x81, 0xca,
	0x28, 0x79, 0x7e, 0x75, 0x13, 0xa7, 0xc2, 0xd3, 0x46, 0xfa, 0x57, 0x0d, 0x3a, 0xb9, 0xf2, 0xff,
	0x46, 0x7d, 0xfa, 0x7b, 0x0d, 0xa0, 0x68, 0xf9, 0xbd, 0xc8, 0x51, 0x94, 0xdc, 0x58, 0x2b, 0x79,
	0x6b, 0x82, 0xd0, 0x15, 0x1c, 0xaf, 0x2f, 0x3d, 0xcd, 0x6c, 0xfb, 0xd0, 0x5a, 0xe9, 0xd0, 0x13,
	0x68, 0xe2, 0xc2, 0x67, 0x61, 0x56, 0x8d, 0x16, 0x2a, 0x79, 0xda, 0x83, 0x76, 0xe2, 0x73, 0xbe,
	0x8a, 0xd3, 0x20, 0xeb, 0x74, 0x2e, 0xd3, 0x97, 0x70, 0x68, 0x6d, 0xc8, 0x0f, 0x9f, 0x6a, 0xe7,
	0xaa, 0x97, 0x72, 0x8d, 0xe0, 0xe1, 0x2b, 0x36, 0xc7, 0xd7, 0xa9, 0xe7, 0x0b, 0xd4, 0x9c, 0xbc,
	0x7d, 0xd4, 0x0d, 0xfc, 0xf5, 0x02, 0x7e, 0xfa, 0x2b, 0xc0, 0x25, 0xa6, 0x3c, 0x8e, 0xee, 0x8d,
	0x46, 0x55, 0x0b, 0xf2, 0x01, 0xdc, 0xb1, 0x06, 0x90, 0x3e, 0x83, 0xdd, 0x4b, 0x8c, 0x93, 0x10,
	0xc9, 0x13, 0xd8, 0x4d, 0xd4, 0xa9, 0x4e, 0xcd, 0x9a, 0xc4, 0xa2, 0x10, 0x2f, 0x33, 0xd3, 0x11,
	0x1c, 0x5d, 0x29, 0x70, 0x4b, 0xaf, 0x41, 0x65, 0x95, 0xc5, 0xa8, 0xd4, 0xed, 0x51, 0xa1, 0x03,
	0x38, 0x98, 0xa0, 0xd8, 0xe2, 0x3d, 0xa1, 0x9f, 0xc2, 0x83, 0x62, 0xc0, 0xb5, 0xeb, 0x01, 0xd4,
	0x59, 0x90, 0xb9, 0xd5, 0x59, 0x40, 0xcf, 0xe1, 0xb0, 0xbc, 0x03, 0xca, 0x3e, 0xe4, 0xb1, 0xd5,
	0xe8, 0xae, 0xdb, 0xd1, 0x97, 0x93, 0x01, 0xba, 0xe7, 0x53, 0x20, 0x3f, 0xe1, 0xaa, 0x7c, 0xd0,
	0x2d, 0xb7, 0x92, 0x51, 0xc5, 0xad, 0xb4, 0x94, 0x1f, 0xd2, 0xa8, 0x3e, 0xc4, 0x85, 0x1d, 0x29,
	0x49, 0x28, 0x04, 0x13, 0xa1, 0xa1, 0x96, 0x16, 0x94, 0xd6, 0xe7, 0x73, 0xee, 0xd4, 0xd5, 0x92,
	0xd2, 0x02, 0x9d, 0x80, 0x33, 0x41, 0xf1, 0xe3, 0x32, 0x14, 0x2c, 0x09, 0x15, 0xa5, 0x78, 0x7e,
	0xc7, 0xa7, 0xd0, 0x4c, 0xd4, 0x5a, 0xab, 0xdd, 0xb6, 0x0d, 0xb5, 0x0f, 0x6d, 0x41, 0xf3, 0xfb,
	0x45, 0x22, 0xde, 0xbb, 0x7f, 0xb7, 0xa0, 0xf3, 0x42, 0x82, 0x2f, 0x5f, 0x04, 0x32, 0x82, 0x3d,
	0x7b, 0xec, 0x88, 0xa3, 0x92, 0x54, 0x4c, 0x62, 0xef, 0xe3, 0x0a, 0x4b, 0x56, 0xc8, 0x73, 0xe8,
	0xe4, 0x23, 0x44, 0x74, 0x19, 0xe5, 0x91, 0xea, 0x3d, 0x2a, 0xab, 0xb3, 0xd8, 0xef, 0xa0, 0x6b,
	0xbd, 0x50, 0xe4, 0x23, 0xbd, 0x80, 0x37, 0x9e, 0xb8, 0x9e, 0xb3, 0x69, 0xc8, 0x32, 0xb8, 0xd0,
	0x96, 0x43, 0xa7, 0x5a, 0xdb, 0xd3, 0xa7, 0x54, 0xcd, 0x60, 0x0f, 0x94, 0x4d, 0x35, 0x81, 0x9c,
	0x41, 0x77, 0xcc, 0x78, 0x78, 0xd7, 0x30, 0x17, 0xda, 0xc6, 0xbc, 0x75, 0xcc, 0x37, 0x00, 0x6f,
	0xa2, 0xf4, 0xae, 0x51, 0x67, 0x70, 0x70, 0x85, 0xc2, 0xe2, 0x64, 0xd6, 0x99, 0x4d, 0x96, 0xae,
	0x85, 0x7d, 0xab, 0xe6, 0xea, 0x75, 0x84, 0x79, 0xd8, 0x49, 0x89, 0x15, 0x3a, 0xa6, 0x9a, 0x2b,
	0xe4, 0x39, 0xec, 0x4f, 0x50, 0x78, 0xc5, 0xf3, 0x68, 0xe5, 0xee, 0x3d, 0x36, 0x08, 0x54, 0xb3,
	0xf1, 0x09, 0xec, 0x4d, 0x50, 0x9c, 0x87, 0x61, 0xb6, 0x50, 0xec, 0xd0, 0x6e, 0xb6, 0x4c, 0x94,
	0xe1, 0x14, 0xf6, 0xb3, 0x32, 0xf4, 0xa3, 0x43, 0x88, 0xf5, 0xe8, 0x57, 0x5d, 0x6a, 0x08, 0x7b,
	0xe7, 0xd3, 0x29, 0x26, 0x77, 0xf0, 0x1f, 0x63, 0x88, 0x02, 0xb7, 0xf4, 0xff, 0x02, 0x60, 0x94,
	0xa2, 0x2f, 0x50, 0xee, 0x23, 0x72, 0x98, 0xff, 0x04, 0xa8, 0xf2, 0xfd, 0x0a, 0x40, 0xd7, 0xa2,
	0x7c, 0x35, 0xa9, 0x37, 0xd6, 0x61, 0x39, 0x42, 0x57, 0xb3, 0x75, 0xc4, 0x53, 0xe8, 0x9e, 0x4f,
	0x6f, 0x18, 0xbe, 0xdb, 0xae, 0xa0, 0x56, 0xb6, 0x49, 0xc9, 0xb1, 0x01, 0xc8, 0xf6, 0xdd, 0x88,
	0x7e, 0x41, 0x7f, 0xe9, 0xcf, 0x98, 0xb8, 0x59, 0x5e, 0x0f, 0xa7, 0xf1, 0xe2, 0x34, 0x58, 0x26,
	0x29, 0xe2, 0xcd, 0x7c, 0x19, 0xf8, 0xa7, 0x92, 0x0f, 0x6a, 0x35, 0x5c, 0xef, 0xaa, 0xbf, 0x23,
	0x5f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x03, 0x03, 0x92, 0xcc, 0xa3, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BingoDataClient is the client API for BingoData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BingoDataClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	GetUserData(ctx context.Context, in *GetUserDataRequest, opts ...grpc.CallOption) (*GetUserDataResponse, error)
	LikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	DislikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	RatePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	UnratePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	SetNewTaskPack(ctx context.Context, in *NewTaskPackRequest, opts ...grpc.CallOption) (*Empty, error)
	GetOneTaskPack(ctx context.Context, in *TaskPackRequest, opts ...grpc.CallOption) (*TaskPackResponse, error)
	GetRatedPacks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMultiplePacksResponse, error)
	GetAllPeople(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*People, error)
	RequestFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	AcceptFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	CreateGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error)
	AcceptGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error)
	AchieveGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error)
	GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GameRequest, error)
}

type bingoDataClient struct {
	cc *grpc.ClientConn
}

func NewBingoDataClient(cc *grpc.ClientConn) BingoDataClient {
	return &bingoDataClient{cc}
}

func (c *bingoDataClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetUserData(ctx context.Context, in *GetUserDataRequest, opts ...grpc.CallOption) (*GetUserDataResponse, error) {
	out := new(GetUserDataResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetUserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) LikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/LikePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DislikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DislikePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) RatePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/RatePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) UnratePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/UnratePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) SetNewTaskPack(ctx context.Context, in *NewTaskPackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/SetNewTaskPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetOneTaskPack(ctx context.Context, in *TaskPackRequest, opts ...grpc.CallOption) (*TaskPackResponse, error) {
	out := new(TaskPackResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetOneTaskPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetRatedPacks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMultiplePacksResponse, error) {
	out := new(GetMultiplePacksResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetRatedPacks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetAllPeople(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*People, error) {
	out := new(People)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetAllPeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) RequestFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/RequestFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AcceptFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AcceptFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DeleteFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DeleteFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) CreateGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/CreateGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AcceptGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AcceptGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DeleteGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DeleteGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AchieveGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AchieveGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GameRequest, error) {
	out := new(GameRequest)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BingoDataServer is the server API for BingoData service.
type BingoDataServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	GetUserData(context.Context, *GetUserDataRequest) (*GetUserDataResponse, error)
	LikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	DislikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	RatePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	UnratePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	SetNewTaskPack(context.Context, *NewTaskPackRequest) (*Empty, error)
	GetOneTaskPack(context.Context, *TaskPackRequest) (*TaskPackResponse, error)
	GetRatedPacks(context.Context, *Empty) (*GetMultiplePacksResponse, error)
	GetAllPeople(context.Context, *Empty) (*People, error)
	RequestFriend(context.Context, *FriendRequest) (*Empty, error)
	AcceptFriend(context.Context, *FriendRequest) (*Empty, error)
	DeleteFriend(context.Context, *FriendRequest) (*Empty, error)
	CreateGame(context.Context, *GameRequest) (*Empty, error)
	AcceptGame(context.Context, *StatusGameRequest) (*Empty, error)
	DeleteGame(context.Context, *StatusGameRequest) (*Empty, error)
	AchieveGame(context.Context, *GameRequest) (*Empty, error)
	GetGame(context.Context, *GetGameRequest) (*GameRequest, error)
}

func RegisterBingoDataServer(s *grpc.Server, srv BingoDataServer) {
	s.RegisterService(&_BingoData_serviceDesc, srv)
}

func _BingoData_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetUserData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetUserData(ctx, req.(*GetUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_LikePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).LikePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/LikePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).LikePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DislikePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DislikePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DislikePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DislikePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_RatePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RatePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RatePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RatePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_UnratePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).UnratePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/UnratePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).UnratePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_SetNewTaskPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTaskPackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).SetNewTaskPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/SetNewTaskPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).SetNewTaskPack(ctx, req.(*NewTaskPackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetOneTaskPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskPackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetOneTaskPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetOneTaskPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetOneTaskPack(ctx, req.(*TaskPackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetRatedPacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetRatedPacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetRatedPacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetRatedPacks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetAllPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetAllPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetAllPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetAllPeople(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_RequestFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RequestFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RequestFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RequestFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AcceptFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AcceptFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AcceptFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AcceptFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DeleteFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DeleteFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DeleteFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DeleteFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_CreateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).CreateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/CreateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).CreateGame(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AcceptGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AcceptGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AcceptGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AcceptGame(ctx, req.(*StatusGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DeleteGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DeleteGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DeleteGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DeleteGame(ctx, req.(*StatusGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AchieveGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AchieveGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AchieveGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AchieveGame(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetGame(ctx, req.(*GetGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BingoData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BingoData",
	HandlerType: (*BingoDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _BingoData_RegisterUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _BingoData_LoginUser_Handler,
		},
		{
			MethodName: "GetUserData",
			Handler:    _BingoData_GetUserData_Handler,
		},
		{
			MethodName: "LikePack",
			Handler:    _BingoData_LikePack_Handler,
		},
		{
			MethodName: "DislikePack",
			Handler:    _BingoData_DislikePack_Handler,
		},
		{
			MethodName: "RatePack",
			Handler:    _BingoData_RatePack_Handler,
		},
		{
			MethodName: "UnratePack",
			Handler:    _BingoData_UnratePack_Handler,
		},
		{
			MethodName: "SetNewTaskPack",
			Handler:    _BingoData_SetNewTaskPack_Handler,
		},
		{
			MethodName: "GetOneTaskPack",
			Handler:    _BingoData_GetOneTaskPack_Handler,
		},
		{
			MethodName: "GetRatedPacks",
			Handler:    _BingoData_GetRatedPacks_Handler,
		},
		{
			MethodName: "GetAllPeople",
			Handler:    _BingoData_GetAllPeople_Handler,
		},
		{
			MethodName: "RequestFriend",
			Handler:    _BingoData_RequestFriend_Handler,
		},
		{
			MethodName: "AcceptFriend",
			Handler:    _BingoData_AcceptFriend_Handler,
		},
		{
			MethodName: "DeleteFriend",
			Handler:    _BingoData_DeleteFriend_Handler,
		},
		{
			MethodName: "CreateGame",
			Handler:    _BingoData_CreateGame_Handler,
		},
		{
			MethodName: "AcceptGame",
			Handler:    _BingoData_AcceptGame_Handler,
		},
		{
			MethodName: "DeleteGame",
			Handler:    _BingoData_DeleteGame_Handler,
		},
		{
			MethodName: "AchieveGame",
			Handler:    _BingoData_AchieveGame_Handler,
		},
		{
			MethodName: "GetGame",
			Handler:    _BingoData_GetGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serviceData.proto",
}
