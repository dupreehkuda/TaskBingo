syntax = "proto3";

package api;

option go_package = "./";

// ------------------ Users service ------------------
service Users {
  rpc GetUserData(GetUserDataRequest) returns (GetUserDataResponse);
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc LikePack(LikeOrRatePackRequest) returns (Empty);
  rpc DislikePack(LikeOrRatePackRequest) returns (Empty);
  rpc RatePack(LikeOrRatePackRequest) returns (Empty);
  rpc UnratePack(LikeOrRatePackRequest) returns (Empty);
  rpc GetRatedPacks(Empty) returns (RatedPacksResponse);
  rpc AssignNewPack(AssignNewPackRequest) returns (Empty);
  rpc GetAllPeople(Empty) returns (People);
  rpc RequestFriend(FriendRequest) returns (Empty);
  rpc AcceptFriend(FriendRequest) returns (Empty);
  rpc DeleteFriend(FriendRequest) returns (Empty);
  rpc CreateGame(NewGameRequest) returns (Empty);
  rpc AcceptGame(AcceptGameRequest) returns (Empty);
}

message RegisterUserResponse {
  string userID = 1;
  string username = 2;
}

message LoginUserResponse {
  string userID = 1;
  string username = 2;
}

message NewGameRequest {
  string gameID = 1;
  string user1id = 2;
  string user2id = 3;
  string pack = 4;
  int32 status = 5;
  int32 user1bingo = 6;
  int32 user2bingo = 7;
  string winner = 8;
  repeated int32 numbers = 9;
  repeated int32 user1numbers = 10;
  repeated int32 user2numbers = 11;
}

message FriendRequest {
  string userID = 1;
  string friendID = 2;
}

message GetUserDataRequest {
  string userID = 1;
}

message GetUserDataResponse {
  string userID = 1;
  string username = 2;
  string city = 3;
  int32 wins = 4;
  int32 loses = 5;
  int32 bingo = 6;
  repeated FriendInfo friends = 7;
  repeated string likedPacks = 8;
  repeated string ratedPacks = 9;
}

message FriendInfo {
  string userID = 1;
  string username = 2;
  int32 status = 3;
  int32 wins = 4;
  int32 loses = 5;
}

message RegisterUserRequest {
  string username = 1;
  string email = 2;
  string city = 3;
  string password = 4;
}

message LoginUserRequest {
  string username = 1;
  string password = 2;
}

message LikeOrRatePackRequest {
  string userID = 1;
  string pack = 2;
}

message RatedPacksResponse {
  repeated string packs = 1;
}

message AssignNewPackRequest {
  string userID = 1;
  string packID = 2;
  string packName = 3;
}

message PersonInfo {
  string userID = 1;
  string username = 2;
  string city = 3;
  int32 bingo = 4;
}

message People {
  repeated PersonInfo person = 1;
}

message AcceptGameRequest {
  string userID = 1;
  string gameID = 2;
}

message Empty {}

// ------------------ Tasks service ------------------
service Tasks {
  rpc GetOneTaskPack(TaskPackRequest) returns (TaskPackResponse) {}
  rpc AddOneTaskPack(NewTaskPackRequest) returns (NewTaskPackResponse) {}
  rpc GetMultiplePacks(GetMultiplePacksRequest) returns (GetMultiplePacksResponse) {}
}

message TaskPackRequest {
  string id = 1;
}

message TaskPackResponse {
  string id = 1;
  string title = 2;
  repeated string tasks = 3;
}

message NewTaskPackRequest {
  string id = 1;
  Pack pack = 2;
}

message Pack {
  string title = 1;
  repeated string tasks = 2;
}

message NewTaskPackResponse {
  string id = 1;
}

message GetMultiplePacksRequest {
  repeated string ids = 1;
}

message GetMultiplePacksResponse {
  repeated TaskPackResponse packs = 1;
}