// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-rc.1
// 	protoc        v3.21.9
// source: serviceData.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterUserResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RegisterUserResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type LoginUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *LoginUserResponse) Reset() {
	*x = LoginUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserResponse) ProtoMessage() {}

func (x *LoginUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserResponse.ProtoReflect.Descriptor instead.
func (*LoginUserResponse) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{1}
}

func (x *LoginUserResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LoginUserResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID       string  `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	User1Id      string  `protobuf:"bytes,2,opt,name=user1id,proto3" json:"user1id,omitempty"`
	User2Id      string  `protobuf:"bytes,3,opt,name=user2id,proto3" json:"user2id,omitempty"`
	Pack         string  `protobuf:"bytes,4,opt,name=pack,proto3" json:"pack,omitempty"`
	Status       int32   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	User1Bingo   int32   `protobuf:"varint,6,opt,name=user1bingo,proto3" json:"user1bingo,omitempty"`
	User2Bingo   int32   `protobuf:"varint,7,opt,name=user2bingo,proto3" json:"user2bingo,omitempty"`
	Winner       string  `protobuf:"bytes,8,opt,name=winner,proto3" json:"winner,omitempty"`
	Numbers      []int32 `protobuf:"varint,9,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	User1Numbers []int32 `protobuf:"varint,10,rep,packed,name=user1numbers,proto3" json:"user1numbers,omitempty"`
	User2Numbers []int32 `protobuf:"varint,11,rep,packed,name=user2numbers,proto3" json:"user2numbers,omitempty"`
}

func (x *GameRequest) Reset() {
	*x = GameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRequest) ProtoMessage() {}

func (x *GameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRequest.ProtoReflect.Descriptor instead.
func (*GameRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{2}
}

func (x *GameRequest) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

func (x *GameRequest) GetUser1Id() string {
	if x != nil {
		return x.User1Id
	}
	return ""
}

func (x *GameRequest) GetUser2Id() string {
	if x != nil {
		return x.User2Id
	}
	return ""
}

func (x *GameRequest) GetPack() string {
	if x != nil {
		return x.Pack
	}
	return ""
}

func (x *GameRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GameRequest) GetUser1Bingo() int32 {
	if x != nil {
		return x.User1Bingo
	}
	return 0
}

func (x *GameRequest) GetUser2Bingo() int32 {
	if x != nil {
		return x.User2Bingo
	}
	return 0
}

func (x *GameRequest) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *GameRequest) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *GameRequest) GetUser1Numbers() []int32 {
	if x != nil {
		return x.User1Numbers
	}
	return nil
}

func (x *GameRequest) GetUser2Numbers() []int32 {
	if x != nil {
		return x.User2Numbers
	}
	return nil
}

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FriendID string `protobuf:"bytes,2,opt,name=friendID,proto3" json:"friendID,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{3}
}

func (x *FriendRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FriendRequest) GetFriendID() string {
	if x != nil {
		return x.FriendID
	}
	return ""
}

type GetUserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserDataRequest) Reset() {
	*x = GetUserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataRequest) ProtoMessage() {}

func (x *GetUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataRequest.ProtoReflect.Descriptor instead.
func (*GetUserDataRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserDataRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string        `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username   string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	City       string        `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Wins       int32         `protobuf:"varint,4,opt,name=wins,proto3" json:"wins,omitempty"`
	Loses      int32         `protobuf:"varint,5,opt,name=loses,proto3" json:"loses,omitempty"`
	Bingo      int32         `protobuf:"varint,6,opt,name=bingo,proto3" json:"bingo,omitempty"`
	Friends    []*FriendInfo `protobuf:"bytes,7,rep,name=friends,proto3" json:"friends,omitempty"`
	LikedPacks []string      `protobuf:"bytes,8,rep,name=likedPacks,proto3" json:"likedPacks,omitempty"`
	RatedPacks []string      `protobuf:"bytes,9,rep,name=ratedPacks,proto3" json:"ratedPacks,omitempty"`
}

func (x *GetUserDataResponse) Reset() {
	*x = GetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataResponse) ProtoMessage() {}

func (x *GetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataResponse.ProtoReflect.Descriptor instead.
func (*GetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserDataResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserDataResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserDataResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetUserDataResponse) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *GetUserDataResponse) GetLoses() int32 {
	if x != nil {
		return x.Loses
	}
	return 0
}

func (x *GetUserDataResponse) GetBingo() int32 {
	if x != nil {
		return x.Bingo
	}
	return 0
}

func (x *GetUserDataResponse) GetFriends() []*FriendInfo {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *GetUserDataResponse) GetLikedPacks() []string {
	if x != nil {
		return x.LikedPacks
	}
	return nil
}

func (x *GetUserDataResponse) GetRatedPacks() []string {
	if x != nil {
		return x.RatedPacks
	}
	return nil
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Wins     int32  `protobuf:"varint,4,opt,name=wins,proto3" json:"wins,omitempty"`
	Loses    int32  `protobuf:"varint,5,opt,name=loses,proto3" json:"loses,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{6}
}

func (x *FriendInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FriendInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FriendInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FriendInfo) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *FriendInfo) GetLoses() int32 {
	if x != nil {
		return x.Loses
	}
	return 0
}

type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	City     string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterUserRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RegisterUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginUserRequest) Reset() {
	*x = LoginUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserRequest) ProtoMessage() {}

func (x *LoginUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserRequest.ProtoReflect.Descriptor instead.
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{8}
}

func (x *LoginUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LikeOrRatePackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Pack   string `protobuf:"bytes,2,opt,name=pack,proto3" json:"pack,omitempty"`
}

func (x *LikeOrRatePackRequest) Reset() {
	*x = LikeOrRatePackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeOrRatePackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeOrRatePackRequest) ProtoMessage() {}

func (x *LikeOrRatePackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeOrRatePackRequest.ProtoReflect.Descriptor instead.
func (*LikeOrRatePackRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{9}
}

func (x *LikeOrRatePackRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LikeOrRatePackRequest) GetPack() string {
	if x != nil {
		return x.Pack
	}
	return ""
}

type PersonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	City     string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Bingo    int32  `protobuf:"varint,4,opt,name=bingo,proto3" json:"bingo,omitempty"`
}

func (x *PersonInfo) Reset() {
	*x = PersonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonInfo) ProtoMessage() {}

func (x *PersonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonInfo.ProtoReflect.Descriptor instead.
func (*PersonInfo) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{10}
}

func (x *PersonInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PersonInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PersonInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PersonInfo) GetBingo() int32 {
	if x != nil {
		return x.Bingo
	}
	return 0
}

type People struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person []*PersonInfo `protobuf:"bytes,1,rep,name=person,proto3" json:"person,omitempty"`
}

func (x *People) Reset() {
	*x = People{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *People) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*People) ProtoMessage() {}

func (x *People) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use People.ProtoReflect.Descriptor instead.
func (*People) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{11}
}

func (x *People) GetPerson() []*PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type StatusGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GameID string `protobuf:"bytes,2,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *StatusGameRequest) Reset() {
	*x = StatusGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGameRequest) ProtoMessage() {}

func (x *StatusGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGameRequest.ProtoReflect.Descriptor instead.
func (*StatusGameRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{12}
}

func (x *StatusGameRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *StatusGameRequest) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type GetGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID string `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{13}
}

func (x *GetGameRequest) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type TaskPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskPackRequest) Reset() {
	*x = TaskPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPackRequest) ProtoMessage() {}

func (x *TaskPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPackRequest.ProtoReflect.Descriptor instead.
func (*TaskPackRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{14}
}

func (x *TaskPackRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pack *Pack  `protobuf:"bytes,2,opt,name=pack,proto3" json:"pack,omitempty"`
}

func (x *TaskPackResponse) Reset() {
	*x = TaskPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPackResponse) ProtoMessage() {}

func (x *TaskPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPackResponse.ProtoReflect.Descriptor instead.
func (*TaskPackResponse) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{15}
}

func (x *TaskPackResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskPackResponse) GetPack() *Pack {
	if x != nil {
		return x.Pack
	}
	return nil
}

type NewTaskPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	PackID string `protobuf:"bytes,2,opt,name=packID,proto3" json:"packID,omitempty"`
	Pack   *Pack  `protobuf:"bytes,3,opt,name=pack,proto3" json:"pack,omitempty"`
}

func (x *NewTaskPackRequest) Reset() {
	*x = NewTaskPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTaskPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTaskPackRequest) ProtoMessage() {}

func (x *NewTaskPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTaskPackRequest.ProtoReflect.Descriptor instead.
func (*NewTaskPackRequest) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{16}
}

func (x *NewTaskPackRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *NewTaskPackRequest) GetPackID() string {
	if x != nil {
		return x.PackID
	}
	return ""
}

func (x *NewTaskPackRequest) GetPack() *Pack {
	if x != nil {
		return x.Pack
	}
	return nil
}

type Pack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Tasks []string `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *Pack) Reset() {
	*x = Pack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack) ProtoMessage() {}

func (x *Pack) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack.ProtoReflect.Descriptor instead.
func (*Pack) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{17}
}

func (x *Pack) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pack) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetMultiplePacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packs []*TaskPackResponse `protobuf:"bytes,1,rep,name=packs,proto3" json:"packs,omitempty"`
}

func (x *GetMultiplePacksResponse) Reset() {
	*x = GetMultiplePacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiplePacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiplePacksResponse) ProtoMessage() {}

func (x *GetMultiplePacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiplePacksResponse.ProtoReflect.Descriptor instead.
func (*GetMultiplePacksResponse) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{18}
}

func (x *GetMultiplePacksResponse) GetPacks() []*TaskPackResponse {
	if x != nil {
		return x.Packs
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serviceData_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_serviceData_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_serviceData_proto_rawDescGZIP(), []int{19}
}

var File_serviceData_proto protoreflect.FileDescriptor

var file_serviceData_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x02,
	0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x31, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x31, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x32, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x32, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x31, 0x62, 0x69,
	0x6e, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x31,
	0x62, 0x69, 0x6e, 0x67, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x32, 0x62, 0x69,
	0x6e, 0x67, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x32,
	0x62, 0x69, 0x6e, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x31,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x31, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x32, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x32, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0x43, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x88, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x69, 0x6e, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x69, 0x6e,
	0x67, 0x6f, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x82, 0x01,
	0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6f, 0x73,
	0x65, 0x73, 0x22, 0x77, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x4c, 0x69, 0x6b, 0x65, 0x4f,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x22, 0x6a, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x22, 0x31, 0x0a, 0x06, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x10, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b,
	0x22, 0x63, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x04, 0x70, 0x61, 0x63, 0x6b, 0x22, 0x32, 0x0a, 0x04, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x47, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x70, 0x61, 0x63,
	0x6b, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x80, 0x08, 0x0a, 0x09,
	0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x4f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32,
	0x0a, 0x08, 0x52, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x55, 0x6e, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x72, 0x52, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x2f,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0a, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2b, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x04,
	0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_serviceData_proto_rawDescOnce sync.Once
	file_serviceData_proto_rawDescData = file_serviceData_proto_rawDesc
)

func file_serviceData_proto_rawDescGZIP() []byte {
	file_serviceData_proto_rawDescOnce.Do(func() {
		file_serviceData_proto_rawDescData = protoimpl.X.CompressGZIP(file_serviceData_proto_rawDescData)
	})
	return file_serviceData_proto_rawDescData
}

var file_serviceData_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_serviceData_proto_goTypes = []interface{}{
	(*RegisterUserResponse)(nil),     // 0: api.RegisterUserResponse
	(*LoginUserResponse)(nil),        // 1: api.LoginUserResponse
	(*GameRequest)(nil),              // 2: api.GameRequest
	(*FriendRequest)(nil),            // 3: api.FriendRequest
	(*GetUserDataRequest)(nil),       // 4: api.GetUserDataRequest
	(*GetUserDataResponse)(nil),      // 5: api.GetUserDataResponse
	(*FriendInfo)(nil),               // 6: api.FriendInfo
	(*RegisterUserRequest)(nil),      // 7: api.RegisterUserRequest
	(*LoginUserRequest)(nil),         // 8: api.LoginUserRequest
	(*LikeOrRatePackRequest)(nil),    // 9: api.LikeOrRatePackRequest
	(*PersonInfo)(nil),               // 10: api.PersonInfo
	(*People)(nil),                   // 11: api.People
	(*StatusGameRequest)(nil),        // 12: api.StatusGameRequest
	(*GetGameRequest)(nil),           // 13: api.GetGameRequest
	(*TaskPackRequest)(nil),          // 14: api.TaskPackRequest
	(*TaskPackResponse)(nil),         // 15: api.TaskPackResponse
	(*NewTaskPackRequest)(nil),       // 16: api.NewTaskPackRequest
	(*Pack)(nil),                     // 17: api.Pack
	(*GetMultiplePacksResponse)(nil), // 18: api.GetMultiplePacksResponse
	(*Empty)(nil),                    // 19: api.Empty
}
var file_serviceData_proto_depIdxs = []int32{
	6,  // 0: api.GetUserDataResponse.friends:type_name -> api.FriendInfo
	10, // 1: api.People.person:type_name -> api.PersonInfo
	17, // 2: api.TaskPackResponse.pack:type_name -> api.Pack
	17, // 3: api.NewTaskPackRequest.pack:type_name -> api.Pack
	15, // 4: api.GetMultiplePacksResponse.packs:type_name -> api.TaskPackResponse
	7,  // 5: api.BingoData.RegisterUser:input_type -> api.RegisterUserRequest
	8,  // 6: api.BingoData.LoginUser:input_type -> api.LoginUserRequest
	4,  // 7: api.BingoData.GetUserData:input_type -> api.GetUserDataRequest
	16, // 8: api.BingoData.SetNewTaskPack:input_type -> api.NewTaskPackRequest
	9,  // 9: api.BingoData.LikePack:input_type -> api.LikeOrRatePackRequest
	9,  // 10: api.BingoData.DislikePack:input_type -> api.LikeOrRatePackRequest
	9,  // 11: api.BingoData.RatePack:input_type -> api.LikeOrRatePackRequest
	9,  // 12: api.BingoData.UnratePack:input_type -> api.LikeOrRatePackRequest
	14, // 13: api.BingoData.GetOneTaskPack:input_type -> api.TaskPackRequest
	19, // 14: api.BingoData.GetRatedPacks:input_type -> api.Empty
	19, // 15: api.BingoData.GetAllPeople:input_type -> api.Empty
	3,  // 16: api.BingoData.RequestFriend:input_type -> api.FriendRequest
	3,  // 17: api.BingoData.AcceptFriend:input_type -> api.FriendRequest
	3,  // 18: api.BingoData.DeleteFriend:input_type -> api.FriendRequest
	2,  // 19: api.BingoData.CreateGame:input_type -> api.GameRequest
	12, // 20: api.BingoData.AcceptGame:input_type -> api.StatusGameRequest
	12, // 21: api.BingoData.DeleteGame:input_type -> api.StatusGameRequest
	2,  // 22: api.BingoData.AchieveGame:input_type -> api.GameRequest
	13, // 23: api.BingoData.GetGame:input_type -> api.GetGameRequest
	0,  // 24: api.BingoData.RegisterUser:output_type -> api.RegisterUserResponse
	1,  // 25: api.BingoData.LoginUser:output_type -> api.LoginUserResponse
	5,  // 26: api.BingoData.GetUserData:output_type -> api.GetUserDataResponse
	19, // 27: api.BingoData.SetNewTaskPack:output_type -> api.Empty
	19, // 28: api.BingoData.LikePack:output_type -> api.Empty
	19, // 29: api.BingoData.DislikePack:output_type -> api.Empty
	19, // 30: api.BingoData.RatePack:output_type -> api.Empty
	19, // 31: api.BingoData.UnratePack:output_type -> api.Empty
	15, // 32: api.BingoData.GetOneTaskPack:output_type -> api.TaskPackResponse
	18, // 33: api.BingoData.GetRatedPacks:output_type -> api.GetMultiplePacksResponse
	11, // 34: api.BingoData.GetAllPeople:output_type -> api.People
	19, // 35: api.BingoData.RequestFriend:output_type -> api.Empty
	19, // 36: api.BingoData.AcceptFriend:output_type -> api.Empty
	19, // 37: api.BingoData.DeleteFriend:output_type -> api.Empty
	19, // 38: api.BingoData.CreateGame:output_type -> api.Empty
	19, // 39: api.BingoData.AcceptGame:output_type -> api.Empty
	19, // 40: api.BingoData.DeleteGame:output_type -> api.Empty
	19, // 41: api.BingoData.AchieveGame:output_type -> api.Empty
	2,  // 42: api.BingoData.GetGame:output_type -> api.GameRequest
	24, // [24:43] is the sub-list for method output_type
	5,  // [5:24] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_serviceData_proto_init() }
func file_serviceData_proto_init() {
	if File_serviceData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_serviceData_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeOrRatePackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*People); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewTaskPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiplePacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serviceData_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_serviceData_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_serviceData_proto_goTypes,
		DependencyIndexes: file_serviceData_proto_depIdxs,
		MessageInfos:      file_serviceData_proto_msgTypes,
	}.Build()
	File_serviceData_proto = out.File
	file_serviceData_proto_rawDesc = nil
	file_serviceData_proto_goTypes = nil
	file_serviceData_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BingoDataClient is the client API for BingoData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BingoDataClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	GetUserData(ctx context.Context, in *GetUserDataRequest, opts ...grpc.CallOption) (*GetUserDataResponse, error)
	SetNewTaskPack(ctx context.Context, in *NewTaskPackRequest, opts ...grpc.CallOption) (*Empty, error)
	LikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	DislikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	RatePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	UnratePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error)
	GetOneTaskPack(ctx context.Context, in *TaskPackRequest, opts ...grpc.CallOption) (*TaskPackResponse, error)
	GetRatedPacks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMultiplePacksResponse, error)
	GetAllPeople(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*People, error)
	RequestFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	AcceptFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error)
	CreateGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error)
	AcceptGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error)
	AchieveGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error)
	GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GameRequest, error)
}

type bingoDataClient struct {
	cc grpc.ClientConnInterface
}

func NewBingoDataClient(cc grpc.ClientConnInterface) BingoDataClient {
	return &bingoDataClient{cc}
}

func (c *bingoDataClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetUserData(ctx context.Context, in *GetUserDataRequest, opts ...grpc.CallOption) (*GetUserDataResponse, error) {
	out := new(GetUserDataResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetUserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) SetNewTaskPack(ctx context.Context, in *NewTaskPackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/SetNewTaskPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) LikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/LikePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DislikePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DislikePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) RatePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/RatePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) UnratePack(ctx context.Context, in *LikeOrRatePackRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/UnratePack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetOneTaskPack(ctx context.Context, in *TaskPackRequest, opts ...grpc.CallOption) (*TaskPackResponse, error) {
	out := new(TaskPackResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetOneTaskPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetRatedPacks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMultiplePacksResponse, error) {
	out := new(GetMultiplePacksResponse)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetRatedPacks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetAllPeople(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*People, error) {
	out := new(People)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetAllPeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) RequestFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/RequestFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AcceptFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AcceptFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DeleteFriend(ctx context.Context, in *FriendRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DeleteFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) CreateGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/CreateGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AcceptGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AcceptGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) DeleteGame(ctx context.Context, in *StatusGameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/DeleteGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) AchieveGame(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.BingoData/AchieveGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bingoDataClient) GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GameRequest, error) {
	out := new(GameRequest)
	err := c.cc.Invoke(ctx, "/api.BingoData/GetGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BingoDataServer is the server API for BingoData service.
type BingoDataServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	GetUserData(context.Context, *GetUserDataRequest) (*GetUserDataResponse, error)
	SetNewTaskPack(context.Context, *NewTaskPackRequest) (*Empty, error)
	LikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	DislikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	RatePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	UnratePack(context.Context, *LikeOrRatePackRequest) (*Empty, error)
	GetOneTaskPack(context.Context, *TaskPackRequest) (*TaskPackResponse, error)
	GetRatedPacks(context.Context, *Empty) (*GetMultiplePacksResponse, error)
	GetAllPeople(context.Context, *Empty) (*People, error)
	RequestFriend(context.Context, *FriendRequest) (*Empty, error)
	AcceptFriend(context.Context, *FriendRequest) (*Empty, error)
	DeleteFriend(context.Context, *FriendRequest) (*Empty, error)
	CreateGame(context.Context, *GameRequest) (*Empty, error)
	AcceptGame(context.Context, *StatusGameRequest) (*Empty, error)
	DeleteGame(context.Context, *StatusGameRequest) (*Empty, error)
	AchieveGame(context.Context, *GameRequest) (*Empty, error)
	GetGame(context.Context, *GetGameRequest) (*GameRequest, error)
}

// UnimplementedBingoDataServer can be embedded to have forward compatible implementations.
type UnimplementedBingoDataServer struct {
}

func (*UnimplementedBingoDataServer) RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedBingoDataServer) LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedBingoDataServer) GetUserData(context.Context, *GetUserDataRequest) (*GetUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserData not implemented")
}
func (*UnimplementedBingoDataServer) SetNewTaskPack(context.Context, *NewTaskPackRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNewTaskPack not implemented")
}
func (*UnimplementedBingoDataServer) LikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikePack not implemented")
}
func (*UnimplementedBingoDataServer) DislikePack(context.Context, *LikeOrRatePackRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DislikePack not implemented")
}
func (*UnimplementedBingoDataServer) RatePack(context.Context, *LikeOrRatePackRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatePack not implemented")
}
func (*UnimplementedBingoDataServer) UnratePack(context.Context, *LikeOrRatePackRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnratePack not implemented")
}
func (*UnimplementedBingoDataServer) GetOneTaskPack(context.Context, *TaskPackRequest) (*TaskPackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOneTaskPack not implemented")
}
func (*UnimplementedBingoDataServer) GetRatedPacks(context.Context, *Empty) (*GetMultiplePacksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRatedPacks not implemented")
}
func (*UnimplementedBingoDataServer) GetAllPeople(context.Context, *Empty) (*People, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPeople not implemented")
}
func (*UnimplementedBingoDataServer) RequestFriend(context.Context, *FriendRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestFriend not implemented")
}
func (*UnimplementedBingoDataServer) AcceptFriend(context.Context, *FriendRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptFriend not implemented")
}
func (*UnimplementedBingoDataServer) DeleteFriend(context.Context, *FriendRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFriend not implemented")
}
func (*UnimplementedBingoDataServer) CreateGame(context.Context, *GameRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGame not implemented")
}
func (*UnimplementedBingoDataServer) AcceptGame(context.Context, *StatusGameRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptGame not implemented")
}
func (*UnimplementedBingoDataServer) DeleteGame(context.Context, *StatusGameRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGame not implemented")
}
func (*UnimplementedBingoDataServer) AchieveGame(context.Context, *GameRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AchieveGame not implemented")
}
func (*UnimplementedBingoDataServer) GetGame(context.Context, *GetGameRequest) (*GameRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGame not implemented")
}

func RegisterBingoDataServer(s *grpc.Server, srv BingoDataServer) {
	s.RegisterService(&_BingoData_serviceDesc, srv)
}

func _BingoData_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetUserData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetUserData(ctx, req.(*GetUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_SetNewTaskPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTaskPackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).SetNewTaskPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/SetNewTaskPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).SetNewTaskPack(ctx, req.(*NewTaskPackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_LikePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).LikePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/LikePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).LikePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DislikePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DislikePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DislikePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DislikePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_RatePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RatePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RatePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RatePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_UnratePack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOrRatePackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).UnratePack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/UnratePack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).UnratePack(ctx, req.(*LikeOrRatePackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetOneTaskPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskPackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetOneTaskPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetOneTaskPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetOneTaskPack(ctx, req.(*TaskPackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetRatedPacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetRatedPacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetRatedPacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetRatedPacks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetAllPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetAllPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetAllPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetAllPeople(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_RequestFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).RequestFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/RequestFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).RequestFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AcceptFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AcceptFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AcceptFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AcceptFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DeleteFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DeleteFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DeleteFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DeleteFriend(ctx, req.(*FriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_CreateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).CreateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/CreateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).CreateGame(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AcceptGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AcceptGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AcceptGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AcceptGame(ctx, req.(*StatusGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_DeleteGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).DeleteGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/DeleteGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).DeleteGame(ctx, req.(*StatusGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_AchieveGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).AchieveGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/AchieveGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).AchieveGame(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BingoData_GetGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BingoDataServer).GetGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BingoData/GetGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BingoDataServer).GetGame(ctx, req.(*GetGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BingoData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BingoData",
	HandlerType: (*BingoDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _BingoData_RegisterUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _BingoData_LoginUser_Handler,
		},
		{
			MethodName: "GetUserData",
			Handler:    _BingoData_GetUserData_Handler,
		},
		{
			MethodName: "SetNewTaskPack",
			Handler:    _BingoData_SetNewTaskPack_Handler,
		},
		{
			MethodName: "LikePack",
			Handler:    _BingoData_LikePack_Handler,
		},
		{
			MethodName: "DislikePack",
			Handler:    _BingoData_DislikePack_Handler,
		},
		{
			MethodName: "RatePack",
			Handler:    _BingoData_RatePack_Handler,
		},
		{
			MethodName: "UnratePack",
			Handler:    _BingoData_UnratePack_Handler,
		},
		{
			MethodName: "GetOneTaskPack",
			Handler:    _BingoData_GetOneTaskPack_Handler,
		},
		{
			MethodName: "GetRatedPacks",
			Handler:    _BingoData_GetRatedPacks_Handler,
		},
		{
			MethodName: "GetAllPeople",
			Handler:    _BingoData_GetAllPeople_Handler,
		},
		{
			MethodName: "RequestFriend",
			Handler:    _BingoData_RequestFriend_Handler,
		},
		{
			MethodName: "AcceptFriend",
			Handler:    _BingoData_AcceptFriend_Handler,
		},
		{
			MethodName: "DeleteFriend",
			Handler:    _BingoData_DeleteFriend_Handler,
		},
		{
			MethodName: "CreateGame",
			Handler:    _BingoData_CreateGame_Handler,
		},
		{
			MethodName: "AcceptGame",
			Handler:    _BingoData_AcceptGame_Handler,
		},
		{
			MethodName: "DeleteGame",
			Handler:    _BingoData_DeleteGame_Handler,
		},
		{
			MethodName: "AchieveGame",
			Handler:    _BingoData_AchieveGame_Handler,
		},
		{
			MethodName: "GetGame",
			Handler:    _BingoData_GetGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serviceData.proto",
}
