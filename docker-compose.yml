version: '3.4'

services:
#  bingo-app:
#    build:
#      dockerfile: ./bingo-app/Dockerfile
#    container_name: bingo-app
#    ports:
#      - '5173:5173'
#    restart: on-failure
#    volumes:
#      - .:/app
#    depends_on:
#      user-service:
#        condition: service_started
#      user-database:
#        condition: service_started

  game-service:
    build: ./game-service
    container_name: game-service
    environment:
      - GAME_SERVICE_ADDRESS=${GAME_SERVICE_ADDRESS}
      - FULL_USER_SERVICE_ADDRESS=${FULL_USER_SERVICE_ADDRESS}
      - FULL_TASK_SERVICE_ADDRESS=${FULL_TASK_SERVICE_ADDRESS}
      - secret=gennadiy
    env_file: .env
    ports:
      - '8082:8082'
    restart: always
    volumes:
      - .:/game_service
    depends_on:
      - user-database
      - user-service

  task-service:
    build: ./task-data-service
    container_name: task-service
    environment:
      - REDIS_ADDR=${REDIS_ADDR}
    env_file: .env
    ports:
      - '8083:8083'
    restart: always
    volumes:
      - .:/task_service
    depends_on:
      - task-database

  user-service:
    build: ./user-data-service
    container_name: user-service
    environment:
      - DATABASE_URI=postgresql://${PSQL_DB_USER}:${PSQL_DB_PASSWORD}@user-db:${PSQL_DB_PORT}/${PSQL_DB_NAME}
      - RUN_ADDRESS=${USER_SERVICE_ADDRESS}
    env_file: .env
    ports:
      - '8081:8081'
    restart: always
    volumes:
      - .:/user_service
    depends_on:
      - user-database

  user-database:
    image: postgres:latest
    container_name: user-db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${PSQL_DB_USER}
      - POSTGRES_PASSWORD=${PSQL_DB_PASSWORD}
      - POSTGRES_DB=${PSQL_DB_NAME}
      - DATABASE_HOST=${PSQL_DB_HOST}
    ports:
      - '5432:5432'

  task-database:
    image: redislabs/rejson:latest
    container_name: task-db
    restart: always
    ports: 
      - '6379:6379'